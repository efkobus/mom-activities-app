{"ast":null,"code":"var _jsxFileName = \"/home/kobus/mom-activities-app/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport api, { login, register, getUserProfile, updateUserProfile, updateSubscription, addChild, updateChild, deleteChild } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          setLoading(false);\n          return;\n        }\n\n        // Try to get current user from API\n        try {\n          const userData = await getUserProfile();\n          setUser(userData);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Error fetching user profile:', error);\n\n          // If API fails, try to use stored user data\n          const storedUser = localStorage.getItem('user');\n          if (storedUser) {\n            try {\n              const parsedUser = JSON.parse(storedUser);\n              setUser(parsedUser);\n              setIsAuthenticated(true);\n              console.log('Using stored user data:', parsedUser);\n            } catch (e) {\n              console.error('Error parsing stored user:', e);\n              localStorage.removeItem('token');\n              localStorage.removeItem('user');\n              setIsAuthenticated(false);\n            }\n          } else {\n            localStorage.removeItem('token');\n            setIsAuthenticated(false);\n          }\n        }\n        setLoading(false);\n      } catch (err) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setUser(null);\n        setIsAuthenticated(false);\n        setLoading(false);\n      }\n    };\n    checkLoggedIn();\n  }, []);\n\n  // Register user\n  const registerUser = async userData => {\n    try {\n      console.log('AuthContext: registerUser called with', userData);\n      setError(null);\n      const data = await register(userData);\n      console.log('AuthContext: register API response', data);\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      setUser(data.user);\n      setIsAuthenticated(true);\n      return data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('AuthContext: register error', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Registration failed');\n      throw err;\n    }\n  };\n\n  // Login user\n  const loginUser = async userData => {\n    try {\n      setError(null);\n      const data = await login(userData);\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      setUser(data.user);\n      setIsAuthenticated(true);\n      return data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Login failed');\n      throw err;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      setError(null);\n      const data = await updateUserProfile(userData);\n      setUser({\n        ...user,\n        name: data.user.name,\n        email: data.user.email\n      });\n      return data;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Profile update failed');\n      throw err;\n    }\n  };\n\n  // Update subscription\n  const updateUserSubscription = async subscriptionData => {\n    try {\n      setError(null);\n      const data = await updateSubscription(subscriptionData);\n      setUser({\n        ...user,\n        subscription: data.subscription,\n        subscriptionExpiry: data.expiryDate\n      });\n      return data;\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Subscription update failed');\n      throw err;\n    }\n  };\n\n  // Add child profile\n  const addChildProfile = async childData => {\n    try {\n      setError(null);\n      const data = await addChild(childData);\n      setUser({\n        ...user,\n        children: [...(user.children || []), data.child]\n      });\n      return data;\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Failed to add child');\n      throw err;\n    }\n  };\n\n  // Update child profile\n  const updateChildProfile = async (childId, childData) => {\n    try {\n      setError(null);\n      const data = await updateChild(childId, childData);\n      setUser({\n        ...user,\n        children: user.children.map(child => child._id === childId ? data.child : child)\n      });\n      return data;\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      setError(((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || 'Failed to update child');\n      throw err;\n    }\n  };\n\n  // Delete child profile\n  const deleteChildProfile = async childId => {\n    try {\n      setError(null);\n      await deleteChild(childId);\n      setUser({\n        ...user,\n        children: user.children.filter(child => child._id !== childId)\n      });\n    } catch (err) {\n      var _err$response7, _err$response7$data;\n      setError(((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : (_err$response7$data = _err$response7.data) === null || _err$response7$data === void 0 ? void 0 : _err$response7$data.message) || 'Failed to delete child');\n      throw err;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      loading,\n      error,\n      register: registerUser,\n      login: loginUser,\n      logout,\n      updateProfile,\n      updateSubscription: updateUserSubscription,\n      addChild: addChildProfile,\n      updateChild: updateChildProfile,\n      deleteChild: deleteChildProfile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"AaZCefjEQIISzggwPe9U62ieYJk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","login","register","getUserProfile","updateUserProfile","updateSubscription","addChild","updateChild","deleteChild","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","checkLoggedIn","token","localStorage","getItem","userData","console","storedUser","parsedUser","JSON","parse","log","e","removeItem","err","registerUser","data","setItem","stringify","_err$response","_err$response$data","response","message","loginUser","_err$response2","_err$response2$data","logout","updateProfile","name","email","_err$response3","_err$response3$data","updateUserSubscription","subscriptionData","subscription","subscriptionExpiry","expiryDate","_err$response4","_err$response4$data","addChildProfile","childData","child","_err$response5","_err$response5$data","updateChildProfile","childId","map","_id","_err$response6","_err$response6$data","deleteChildProfile","filter","_err$response7","_err$response7$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kobus/mom-activities-app/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport api, { login, register, getUserProfile, updateUserProfile, updateSubscription, addChild, updateChild, deleteChild } from '../utils/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        \n        if (!token) {\n          setLoading(false);\n          return;\n        }\n        \n        // Try to get current user from API\n        try {\n          const userData = await getUserProfile();\n          setUser(userData);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Error fetching user profile:', error);\n          \n          // If API fails, try to use stored user data\n          const storedUser = localStorage.getItem('user');\n          if (storedUser) {\n            try {\n              const parsedUser = JSON.parse(storedUser);\n              setUser(parsedUser);\n              setIsAuthenticated(true);\n              console.log('Using stored user data:', parsedUser);\n            } catch (e) {\n              console.error('Error parsing stored user:', e);\n              localStorage.removeItem('token');\n              localStorage.removeItem('user');\n              setIsAuthenticated(false);\n            }\n          } else {\n            localStorage.removeItem('token');\n            setIsAuthenticated(false);\n          }\n        }\n        \n        setLoading(false);\n      } catch (err) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setUser(null);\n        setIsAuthenticated(false);\n        setLoading(false);\n      }\n    };\n    \n    checkLoggedIn();\n  }, []);\n\n  // Register user\n  const registerUser = async (userData) => {\n    try {\n      console.log('AuthContext: registerUser called with', userData);\n      setError(null);\n      const data = await register(userData);\n      console.log('AuthContext: register API response', data);\n      \n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      \n      setUser(data.user);\n      setIsAuthenticated(true);\n      \n      return data;\n    } catch (err) {\n      console.error('AuthContext: register error', err);\n      setError(err.response?.data?.message || 'Registration failed');\n      throw err;\n    }\n  };\n\n  // Login user\n  const loginUser = async (userData) => {\n    try {\n      setError(null);\n      const data = await login(userData);\n      \n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      \n      setUser(data.user);\n      setIsAuthenticated(true);\n      \n      return data;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Login failed');\n      throw err;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Update user profile\n  const updateProfile = async (userData) => {\n    try {\n      setError(null);\n      const data = await updateUserProfile(userData);\n      \n      setUser({\n        ...user,\n        name: data.user.name,\n        email: data.user.email\n      });\n      \n      return data;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Profile update failed');\n      throw err;\n    }\n  };\n\n  // Update subscription\n  const updateUserSubscription = async (subscriptionData) => {\n    try {\n      setError(null);\n      const data = await updateSubscription(subscriptionData);\n      \n      setUser({\n        ...user,\n        subscription: data.subscription,\n        subscriptionExpiry: data.expiryDate\n      });\n      \n      return data;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Subscription update failed');\n      throw err;\n    }\n  };\n\n  // Add child profile\n  const addChildProfile = async (childData) => {\n    try {\n      setError(null);\n      const data = await addChild(childData);\n      \n      setUser({\n        ...user,\n        children: [...(user.children || []), data.child]\n      });\n      \n      return data;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to add child');\n      throw err;\n    }\n  };\n\n  // Update child profile\n  const updateChildProfile = async (childId, childData) => {\n    try {\n      setError(null);\n      const data = await updateChild(childId, childData);\n      \n      setUser({\n        ...user,\n        children: user.children.map(child => \n          child._id === childId ? data.child : child\n        )\n      });\n      \n      return data;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to update child');\n      throw err;\n    }\n  };\n\n  // Delete child profile\n  const deleteChildProfile = async (childId) => {\n    try {\n      setError(null);\n      await deleteChild(childId);\n      \n      setUser({\n        ...user,\n        children: user.children.filter(child => child._id !== childId)\n      });\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to delete child');\n      throw err;\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        isAuthenticated,\n        loading,\n        error,\n        register: registerUser,\n        login: loginUser,\n        logout,\n        updateProfile,\n        updateSubscription: updateUserSubscription,\n        addChild: addChildProfile,\n        updateChild: updateChildProfile,\n        deleteChild: deleteChildProfile\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}