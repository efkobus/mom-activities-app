{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include the auth token in all requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle common errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // Handle 401 Unauthorized errors (token expired or invalid)\n  if (error.response && error.response.status === 401) {\n    localStorage.removeItem('token');\n    // You could redirect to login page here or handle in the component\n  }\n  return Promise.reject(error);\n});\n\n// Authentication API calls\nexport const register = async userData => {\n  const response = await api.post('/api/users/register', userData);\n  return response.data;\n};\nexport const login = async userData => {\n  const response = await api.post('/api/users/login', userData);\n  return response.data;\n};\n\n// Activity related API calls\nexport const getActivities = async (params = {}) => {\n  const response = await api.get('/api/activities', {\n    params\n  });\n  return response.data;\n};\nexport const getActivityById = async id => {\n  const response = await api.get(`/api/activities/${id}`);\n  return response.data;\n};\n\n// Favorites related API calls\nexport const getFavorites = async () => {\n  const response = await api.get('/api/users/favorites');\n  return response.data;\n};\nexport const addToFavorites = async activityId => {\n  const response = await api.post('/api/users/favorites', {\n    activityId\n  });\n  return response.data;\n};\nexport const removeFromFavorites = async activityId => {\n  const response = await api.delete(`/api/users/favorites/${activityId}`);\n  return response.data;\n};\n\n// Activity history related API calls\nexport const getActivityHistory = async () => {\n  const response = await api.get('/api/users/activity-history');\n  return response.data;\n};\nexport const addToHistory = async activityId => {\n  const response = await api.post('/api/users/activity-history', {\n    activityId\n  });\n  return response.data;\n};\n\n// Children related API calls\nexport const getChildren = async () => {\n  const response = await api.get('/api/users/children');\n  return response.data;\n};\nexport const getChildById = async childId => {\n  const response = await api.get(`/api/users/children/${childId}`);\n  return response.data;\n};\nexport const addChild = async childData => {\n  const response = await api.post('/api/users/children', childData);\n  return response.data;\n};\nexport const updateChild = async (childId, childData) => {\n  const response = await api.put(`/api/users/children/${childId}`, childData);\n  return response.data;\n};\nexport const deleteChild = async childId => {\n  const response = await api.delete(`/api/users/children/${childId}`);\n  return response.data;\n};\n\n// User profile related API calls\nexport const getUserProfile = async () => {\n  const response = await api.get('/api/users/me');\n  return response.data;\n};\nexport const updateUserProfile = async profileData => {\n  const response = await api.put('/api/users/profile', profileData);\n  return response.data;\n};\n\n// Subscription related API calls\nexport const getSubscription = async () => {\n  const response = await api.get('/api/users/subscription');\n  return response.data;\n};\nexport const updateSubscription = async subscriptionData => {\n  const response = await api.put('/api/users/subscription', subscriptionData);\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","removeItem","register","userData","post","data","login","getActivities","params","get","getActivityById","id","getFavorites","addToFavorites","activityId","removeFromFavorites","delete","getActivityHistory","addToHistory","getChildren","getChildById","childId","addChild","childData","updateChild","put","deleteChild","getUserProfile","updateUserProfile","profileData","getSubscription","updateSubscription","subscriptionData"],"sources":["/home/kobus/mom-activities-app/client/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include the auth token in all requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor to handle common errors\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // Handle 401 Unauthorized errors (token expired or invalid)\n    if (error.response && error.response.status === 401) {\n      localStorage.removeItem('token');\n      // You could redirect to login page here or handle in the component\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Authentication API calls\nexport const register = async (userData) => {\n  const response = await api.post('/api/users/register', userData);\n  return response.data;\n};\n\nexport const login = async (userData) => {\n  const response = await api.post('/api/users/login', userData);\n  return response.data;\n};\n\n// Activity related API calls\nexport const getActivities = async (params = {}) => {\n  const response = await api.get('/api/activities', { params });\n  return response.data;\n};\n\nexport const getActivityById = async (id) => {\n  const response = await api.get(`/api/activities/${id}`);\n  return response.data;\n};\n\n// Favorites related API calls\nexport const getFavorites = async () => {\n  const response = await api.get('/api/users/favorites');\n  return response.data;\n};\n\nexport const addToFavorites = async (activityId) => {\n  const response = await api.post('/api/users/favorites', { activityId });\n  return response.data;\n};\n\nexport const removeFromFavorites = async (activityId) => {\n  const response = await api.delete(`/api/users/favorites/${activityId}`);\n  return response.data;\n};\n\n// Activity history related API calls\nexport const getActivityHistory = async () => {\n  const response = await api.get('/api/users/activity-history');\n  return response.data;\n};\n\nexport const addToHistory = async (activityId) => {\n  const response = await api.post('/api/users/activity-history', { activityId });\n  return response.data;\n};\n\n// Children related API calls\nexport const getChildren = async () => {\n  const response = await api.get('/api/users/children');\n  return response.data;\n};\n\nexport const getChildById = async (childId) => {\n  const response = await api.get(`/api/users/children/${childId}`);\n  return response.data;\n};\n\nexport const addChild = async (childData) => {\n  const response = await api.post('/api/users/children', childData);\n  return response.data;\n};\n\nexport const updateChild = async (childId, childData) => {\n  const response = await api.put(`/api/users/children/${childId}`, childData);\n  return response.data;\n};\n\nexport const deleteChild = async (childId) => {\n  const response = await api.delete(`/api/users/children/${childId}`);\n  return response.data;\n};\n\n// User profile related API calls\nexport const getUserProfile = async () => {\n  const response = await api.get('/api/users/me');\n  return response.data;\n};\n\nexport const updateUserProfile = async (profileData) => {\n  const response = await api.put('/api/users/profile', profileData);\n  return response.data;\n};\n\n// Subscription related API calls\nexport const getSubscription = async () => {\n  const response = await api.get('/api/users/subscription');\n  return response.data;\n};\n\nexport const updateSubscription = async (subscriptionData) => {\n  const response = await api.put('/api/users/subscription', subscriptionData);\n  return response.data;\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}